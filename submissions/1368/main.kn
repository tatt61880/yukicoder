func main()
	var t: int :: cui@inputInt()
	for(1, t)
		var n: int :: cui@inputInt()
		var a: []int :: #[n + 2]int
		for i(0, n - 1)
			do a[i] :: cui@inputInt()
		end for
		do a[n] :: a[0]
		do a[n + 1] :: a[1]
		
		var ans: int :: 0
		for i(0, 2)
			do ans :: [ans, f(a, n, i)].max()
		end for
		do cui@print("\{ans}\n")
		func f(a: []int, n: int, di: int): int
			var dp: []int :: #[n + 1]int
			for i(0, n - 3)
				var val: int :: 0
				if(a[di + i] <> a[di + i + 2]
					|&(a[di + i] < a[di + i + 1]
					|&a[di + i + 2] < a[di + i + 1]
					||a[di + i] > a[di + i + 1]
					|&a[di + i + 2] > a[di + i + 1]))
					do val :: a[di + i]
				end if
				do dp[i + 3] :: [dp[i + 2], dp[i] + val].max()
			end for
			ret dp[n]
		end func
	end for
end func
