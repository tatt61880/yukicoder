func main()
	var s: []char :: "000001234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991"
	var a: []int :: #[^s]int
	for i(0, ^s - 1)
		do a[i] :: s[i] $ int - '0' $ int
	end for
	var n: int :: cui@inputInt()
	var b: []int :: #[^s]int
	for i(^s - 1, 3, -1)
		do a[i] :* n
		for j(0, 2)
			do b[i - j] :+ a[i] % 10
			if(b[i - j] >= 10)
				do b[i - j] :- 10
				do b[i - j - 1] :+ 1
			end if
			do a[i] :/ 10
		end for
	end for
	for i(0, ^s - 1)
		do s[i] :: '0'.offset(b[i])
	end for
	
	if(s[3] = '0')
		do cui@print("\{s[4]}.\{s.sub(5, -1)}\n")
	else
		do cui@print("\{s[3]}\{s[4]}.\{s.sub(5, -1)}\n")
	end if
end func
