func main()
	var n: int :: cui@inputInt()
	var k: int :: cui@inputInt()
	var x: int :: cui@inputInt()
	var d: []int :: #[n + 1]int
	for i(1, n)
		do d[i] :: i
	end for
	var a: []int :: #[k + 1]int
	var b: []int :: #[k + 1]int
	for i(1, k)
		if(i = x)
			do cui@input()
		else
			do a[i] :: cui@inputInt()
			do b[i] :: cui@inputInt()
		end if
	end for
	var c: []int :: #[n + 1]int
	for i(1, n)
		do c[i] :: cui@inputInt()
	end for
	
	for i(1, x - 1)
		var ai: int :: a[i]
		var bi: int :: b[i]
		var t: int :: d[ai]
		do d[ai] :: d[bi]
		do d[bi] :: t
	end for
	for i(k, x + 1, -1)
		var ai: int :: a[i]
		var bi: int :: b[i]
		var t: int :: c[ai]
		do c[ai] :: c[bi]
		do c[bi] :: t
	end for
	var cnt: int :: 0
	for i(1, n)
		if(c[i] <> d[i])
			do cui@print("\{i}\{cnt = 0 ?(" ", "\n")}")
			do cnt :+ 1
		end if
	end for
end func
