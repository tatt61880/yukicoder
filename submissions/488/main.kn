func main()
	var n: int :: cui@inputInt()
	var m: int :: cui@inputInt()
	var a: []int :: #[m]int
	var b: []int :: #[m]int
	var map: dict<int, bool> :: #dict<int, bool>
	for i(0, m - 1)
		do a[i] :: cui@inputInt()
		do b[i] :: cui@inputInt()
		do map.add(a[i] * n + b[i], true)
		do map.add(b[i] * n + a[i], true)
	end for
	var ans: int :: 0
	for i(0, m - 1)
		for j(i + 1, m - 1)
			if(a[j] = a[i] | a[j] = b[i] | b[j] = a[i] | b[j] = b[i])
				skip j
			end if
			var straight1: bool :: map.get(a[i] * n + a[j], &)
			var straight2: bool :: map.get(b[i] * n + b[j], &)
			var cross1: bool :: map.get(a[i] * n + b[j], &)
			var cross2: bool :: map.get(b[i] * n + a[j], &)
			if(straight1 & straight2 & !cross1 & !cross2 | !straight1 & !straight2 & cross1 & cross2)
				do ans :+ 1
			end if
		end for
	end for
	do ans :/ 2
	do cui@print("\{ans}\n")
end func
