func main()
	var N: int :: cui@input().toInt(&)
	var _: [][]char :: cui@input().split(" ")
	var A: []int :: #[2 * N]int
	for i(0, N - 1)
		do A[i] :: _[i].toInt(&)
	end for
	var ans: int :: 10000
	for c(0, 2 * N - 1)
		var r: int :: 2 * c
		if(r > 2 * N - 1)
			break c
		end if
		do ans :: [ans, f(A, c, r)].min()
	end for
	do cui@print("\{ans}\n")
	func f(A: []int, center: int, right: int): int
		var plus: int
		var minus: int
		for i(0, ^A - 1)
			if(i <= center)
				var targetVal: int :: i + 1
				if(A[i] > targetVal)
					do plus :+ A[i] - targetVal
				elif(A[i] < targetVal)
					do minus :+ targetVal - A[i]
				end if
			elif(center < i & i <= right)
				var targetVal: int :: right - i + 1
				if(A[i] > targetVal)
					do plus :+ A[i] - targetVal
				elif(A[i] < targetVal)
					do minus :+ targetVal - A[i]
				end if
			else
				do plus :+ A[i]
			end if
		end for
		if(plus >= minus)
			ret plus
		else
			ret 10000
		end if
	end func
end func